{"version":3,"sources":["components/Feedback.module.css","components/Section.js","components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","App/App.js","index.js"],"names":["module","exports","Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","grades","onFeedbackValue","className","map","grade","type","value","onClick","s","feedbackBtn","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,YAAc,gC,+ICejBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCGQC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCyBEC,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACGD,EACC,+BACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAMH,EAAMC,EAASC,MAChC,oDAAuBE,EAAmBJ,EAAMC,EAASC,GAAzD,UAGF,cAAC,EAAD,CAAcJ,QAAQ,yB,gBCUbO,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,gBAAX,OACtB,qBAAKC,UAAU,MAAf,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,wBAEEC,KAAK,SACLC,MAAOF,EACPG,QAASN,EACTC,UAAWM,IAAEC,YALf,SAOGL,GANIA,SCFE,SAASM,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOf,EAAP,KAAYkB,EAAZ,KAkBMC,EAAqB,SAACrB,EAAMC,EAASC,GACzC,OAAOF,EAAOC,EAAUC,GAU1B,OACE,gCACE,cAAC,EAAD,CAASP,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBW,OAJR,CAAC,OAAQ,UAAW,OAIIC,gBA9Bf,SAACe,GACvB,OAAQA,EAAEC,OAAOX,OACf,IAAK,OACH,OAAOM,GAAQ,SAAClB,GAAD,OAAUA,EAAO,KAElC,IAAK,UACH,OAAOmB,GAAW,SAAClB,GAAD,OAAaA,EAAU,KAE3C,IAAK,MACH,OAAOmB,GAAO,SAAClB,GAAD,OAASA,EAAM,KAE/B,QACE,aAoBF,cAAC,EAAD,CAASP,MAAO,aAAhB,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,EACPjB,mBAlBgC,SAACJ,EAAMC,EAASC,GACtD,OAAOmB,EAAmBrB,EAAMC,EAASC,GACrCsB,KAAKC,MAAc,IAAPzB,EAAcqB,EAAmBrB,EAAMC,EAASC,IAC5D,UC7BRwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ced41e28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"Feedback_feedbackBtn__pGwpp\"};","import PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"./Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    {total ? (\n      <ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n        <li>Total:{total(good, neutral, bad)}</li>\n        <li>Positive feedback:{positivePercentage(good, neutral, bad)}%</li>\n      </ul>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst FeedbackOptions = ({ grades, onFeedbackValue }) => (\n  <div className=\"btn\">\n    {grades.map((grade) => (\n      <button\n        key={grade}\n        type=\"button\"\n        value={grade}\n        onClick={onFeedbackValue}\n        className={s.feedbackBtn}\n      >\n        {grade}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  grades: PropTypes.array,\n  onFeedbackValue: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Section from \"../components/Section\";\r\nimport Statistics from \"../components/Statistics\";\r\nimport FeedbackOptions from \"../components/FeedbackOptions\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onFeedbackValue = (e) => {\r\n    switch (e.target.value) {\r\n      case \"good\":\r\n        return setGood((good) => good + 1);\r\n\r\n      case \"neutral\":\r\n        return setNeutral((neutral) => neutral + 1);\r\n\r\n      case \"bad\":\r\n        return setBad((bad) => bad + 1);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = (good, neutral, bad) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = (good, neutral, bad) => {\r\n    return countTotalFeedback(good, neutral, bad)\r\n      ? Math.round((good * 100) / countTotalFeedback(good, neutral, bad))\r\n      : 0;\r\n  };\r\n\r\n  const grades = [\"good\", \"neutral\", \"bad\"];\r\n  return (\r\n    <div>\r\n      <Section title={\"Please leave feedback\"}>\r\n        <FeedbackOptions grades={grades} onFeedbackValue={onFeedbackValue} />\r\n      </Section>\r\n      <Section title={\"Statistics\"}>\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback}\r\n          positivePercentage={countPositiveFeedbackPercentage}\r\n        />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}